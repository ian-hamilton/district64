<?xml version="1.0"?>
<configuration>

  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <system.serviceModel>

    <bindings>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IDistrictService" 
                 closeTimeout="24:01:00"
                 openTimeout="24:01:00" 
                 receiveTimeout="24:10:00" 
                 sendTimeout="24:01:00"
                 bypassProxyOnLocal="false" 
                 transactionFlow="false" 
                 hostNameComparisonMode="StrongWildcard"
                 maxBufferPoolSize="524288" 
                 maxReceivedMessageSize="2147483647"
                 messageEncoding="Text" 
                 textEncoding="utf-8" 
                 useDefaultWebProxy="true"
                 allowCookies="false">
 
          <readerQuotas maxDepth="32" 
                        maxStringContentLength="2147483647" 
                        maxArrayLength="2147483647"
                        maxBytesPerRead="4096" 
                        maxNameTableCharCount="2147483647" />
          <reliableSession ordered="true" inactivityTimeout="24:10:00"
              enabled="false" />
          <security mode="None">
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <client>
      
      <!-- "http://localhost:1824/DistrictService.svc/DistrictService" -->
      <!-- "http://www.district64.com/district64wcf/DistrictService.svc/DistrictService" -->
      
      <endpoint address="http://localhost:1824/DistrictService.svc/DistrictService"
          binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IDistrictService"
          contract="IDistrictService" name="WSHttpBinding_IDistrictService" />
    </client>

    

    <behaviors>
      <endpointBehaviors>
        <behavior name="ServiceBehavior">
          <dataContractSerializer maxItemsInObjectGraph="2147483647"/>
        </behavior>
      </endpointBehaviors>
    </behaviors>
  </system.serviceModel>



  <log4net>
    <!-- Define some output appenders -->
    <appender name="consoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d{ISO8601} [%t] [%-5p] %c - %m%n"/>
      </layout>
    </appender>
    <!-- 
			This is specially configured for use with NUnit because multiple threads
			need access to the same log file.
		-->
    <appender name="fileAppender" type="log4net.Appender.FileAppender">
      <file value="Console.log"/>
      <appendToFile value="true"/>
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d{ISO8601} [%t] [%-5p] %c - %m%n"/>
      </layout>
    </appender>
    <!--
        	* 	Because this is for testing, run at DEBUG level. 
        	*	The consoleAppender will make logging available in the 
        		Console.Out tab of the NUnit GUI.
			*	The fileAppender will store the logging output for reference.
				This is convenient because the logging output in NUnit is
				erased after each test run.        		
        -->
    <root>
      <priority value="DEBUG"/>
      <appender-ref ref="consoleAppender"/>
      <appender-ref ref="fileAppender"/>
    </root>
  </log4net>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
</configuration>
